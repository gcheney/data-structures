package arrays;

import java.util.Arrays;

/**
 * 
 * @author glendon cheney
 *
 * @param <E>
 */
public class ArrayList<E> {
 
    private E[] elements;
    private int size = 0;
    private final static int DEFAULT_CAPACITY = 10;
    
    /**
     * 
     */
    public ArrayList() {
    	this(DEFAULT_CAPACITY);
    }
     
    /**
     * 
     * @param size
     */
	@SuppressWarnings("unchecked")
	public ArrayList(int size) {   	
        elements = (E[]) new Object[size];
    }
	
	/**
	 * 
	 * @param element
	 * @return
	 */
	public boolean contains(E element) {
		if (this.isEmpty()) {
			return false;
		} 
		
		for (int i = 0; i < size; i++) {
			if (elements[i].equals(element)) {
				return true;
			}
		}	
		
		return false;
	}
	
	/**
	 * 
	 * @param element
	 * @return
	 */
	public int indexOf(E element) {
		if (!this.isEmpty()) {
			for (int i = 0; i < size; i++) {
				if (elements[i].equals(element)) {
					return i;
				}
			}	
		}		
		
		return -1;
	}
     
	/**
	 * 
	 * @param index
	 * @return
	 */
    public E get(int index) {    	
        if (index > size) {
        	throw new ArrayIndexOutOfBoundsException();
        }    
        
        return elements[index];
    }
     
    /**
     * 
     * @param element
     */
    public void add(E element) {    	
        if (elements.length - size <= 5) {
            increaseListSize();
        }  
        
        elements[size++] = element;
    }
    
    /**
     * 
     * @return
     */
    public E remove() {    	
    	return this.remove(0);
    }
     
    /**
     * 
     * @param index
     * @return
     */
    public E remove(int index) {   	
        if (index > size) {       	
        	throw new ArrayIndexOutOfBoundsException();
        } 
        
        E element = elements[index];
        elements[index] = null;
        int temp = index;
        
        while (temp < size) {            	
            elements[temp] = elements[temp+1];
            elements[++temp] = null;
        }
        
        size--;
        return element;
    }
     
    /**
     * 
     * @return
     */
    public int size() {   	
        return size;
    }
    
    /**
     * 
     * @return
     */
    public boolean isEmpty() {
    	return (size == 0);
    }
    
    /**
     * 
     * @param a
     * @return
     */
    public E[] toArray(E[] a) {
    	if (a.length < size) {
    		@SuppressWarnings("unchecked")
			E[] result = (E[]) Arrays.copyOf(elements, size, a.getClass());
    		return result;
    	}
    	
    	System.arraycopy(elements, 0, a, 0, size);
    	if (a.length > size) {
    		a[size] = null;
    	}
    	return a;
    }
     
    private void increaseListSize() {
        elements = Arrays.copyOf(elements, elements.length * 2);
        System.out.println("\nNew length: " + elements.length);
    }
    
}